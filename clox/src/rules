{
rules[TokenType::LeftParen as u8 as usize]     = ParseRule {prefix: Some(Vm::grouping), infix: None,             precedence: Precedence::Call};
rules[TokenType::RightParen as u8 as usize]    = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::LeftBrace as u8 as usize]     = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::RightBrace as u8 as usize]    = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Comma as u8 as usize]         = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Dot as u8 as usize]           = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Dot as u8 as usize]           = ParseRule {prefix: None,               infix: None,             precedence: Precedence::Call};
rules[TokenType::Minus as u8 as usize]         = ParseRule {prefix: Some(Vm::unary),    infix: Some(Vm::binary), precedence: Precedence::Term};
rules[TokenType::Plus as u8 as usize]          = ParseRule {prefix: None,               infix: Some(Vm::binary), precedence: Precedence::Term};
rules[TokenType::Semicolon as u8 as usize]     = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Slash as u8 as usize]         = ParseRule {prefix: None,               infix: Some(Vm::binary), precedence: Precedence::Factor};
rules[TokenType::Star as u8 as usize]          = ParseRule {prefix: None,               infix: Some(Vm::binary), precedence: Precedence::Factor};
rules[TokenType::Bang as u8 as usize]          = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::BangEqual as u8 as usize]     = ParseRule {prefix: None,               infix: None,             precedence: Precedence::Equality};
rules[TokenType::Equal as u8 as usize]         = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::EqualEqual as u8 as usize]    = ParseRule {prefix: None,               infix: None,             precedence: Precedence::Equality};
rules[TokenType::Greater as u8 as usize]       = ParseRule {prefix: None,               infix: None,             precedence: Precedence::Comparison};
rules[TokenType::GreaterEqual as u8 as usize]  = ParseRule {prefix: None,               infix: None,             precedence: Precedence::Comparison};
rules[TokenType::Less as u8 as usize]          = ParseRule {prefix: None,               infix: None,             precedence: Precedence::Comparison};
rules[TokenType::LessEqual as u8 as usize]     = ParseRule {prefix: None,               infix: None,             precedence: Precedence::Comparison};
rules[TokenType::Identifier as u8 as usize]    = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::String as u8 as usize]        = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Number as u8 as usize]        = ParseRule {prefix: Some(Vm::number),   infix: None,             precedence: Precedence::None};
rules[TokenType::And as u8 as usize]           = ParseRule {prefix: None,               infix: None,             precedence: Precedence::And};
rules[TokenType::Class as u8 as usize]         = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Else as u8 as usize]          = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::False as u8 as usize]         = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::For as u8 as usize]           = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Fun as u8 as usize]           = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::If as u8 as usize]            = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Nil as u8 as usize]           = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Or as u8 as usize]            = ParseRule {prefix: None,               infix: None,             precedence: Precedence::Or};
rules[TokenType::Print as u8 as usize]         = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Return as u8 as usize]        = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Super as u8 as usize]         = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::This as u8 as usize]          = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::True as u8 as usize]          = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Var as u8 as usize]           = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::While as u8 as usize]         = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Error as u8 as usize]         = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
rules[TokenType::Eof as u8 as usize]           = ParseRule {prefix: None,               infix: None,             precedence: Precedence::None};
}